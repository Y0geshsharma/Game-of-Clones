{"version":3,"sources":["assets/images sync /^/.//.*$","assets/images/Troopers/41st_Elite_Corps.png","assets/images/Troopers/ARCTrooper-CotR.png","assets/images/Troopers/CloneJumpTrooper.jpg","assets/images/Troopers/Clone_Commander_CotR.png","assets/images/Troopers/Clone_heavy_gunner.jpg","assets/images/Troopers/Military_Complex.jpg","assets/images/Troopers/PhaseICloneTrooper2-Fathead.png","assets/images/Troopers/RiotCloneTrooper-TCWs2BR2.png","assets/images/Troopers/SWBF2_ARC_Troopers.png","assets/images/Troopers/Training_Room_Kamino_AtG.png","assets/images/droid army/B2-RP-battle-droid-SWBF2.png","assets/images/droid army/Battle_Droids.png","assets/images/droid army/Christophsis_shield.png","assets/images/droid army/SepAAT.jpg","assets/images/droid army/battle.jpg","assets/images/mainbackground.png","components/ArmyCard.js","Pages/Home.js","components/ArmyDetailCard.js","data/Details.js","Pages/ArmyDetails.js","components/BattleCards.js","Pages/Battle.js","Pages/BattleResult.js","Pages/BattleHistory.js","App.js","serviceWorker.js","index.js","assets/images/droid army/soliders.png","assets/images/Troopers/Grand_army_formation.jpg","assets/images/Troopers/Clone_trooper_armor.png","assets/images/Troopers/CloneSCUBAtrooper-TCWs4BR1.png","assets/images/Troopers/KixFull-SWE.png","assets/images/Troopers/Phase1Jumptrooper_BFII.png","assets/images/Troopers/Squad_Clone_Trooper_Ordnance_Specialist.png","assets/images/droid army/b1battledroid.png","assets/images/droid army/SuperBattleDroidDetail-SWE.png","assets/images/droid army/AAT_BF2.png"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","ArmyCard","type","image","onClick","color","className","style","borderColor","background","Home","history","Fragment","push","src","require","ArmyDetailCard","delay","data","class","animationDelay","split","d","armies","width","height","types","props","cursor","position","top","left","size","ArmyDetails","location","state","textShadow","toUpperCase","filter","a","v","i","BattleCards","num","Battle","droid","troopers","parseInt","Math","random","marginRight","getResult","BattleResult","res","BattleHistory","App","exact","path","render","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3a18b27e.chunk.js","sourcesContent":["var map = {\n\t\"./Troopers/41st_Elite_Corps.png\": 156,\n\t\"./Troopers/ARCTrooper-CotR.png\": 157,\n\t\"./Troopers/CloneJumpTrooper.jpg\": 158,\n\t\"./Troopers/CloneSCUBAtrooper-TCWs4BR1.png\": 76,\n\t\"./Troopers/Clone_Commander_CotR.png\": 159,\n\t\"./Troopers/Clone_heavy_gunner.jpg\": 160,\n\t\"./Troopers/Clone_trooper_armor.png\": 75,\n\t\"./Troopers/Grand_army_formation.jpg\": 74,\n\t\"./Troopers/KixFull-SWE.png\": 77,\n\t\"./Troopers/Military_Complex.jpg\": 161,\n\t\"./Troopers/Phase1Jumptrooper_BFII.png\": 78,\n\t\"./Troopers/PhaseICloneTrooper2-Fathead.png\": 162,\n\t\"./Troopers/RiotCloneTrooper-TCWs2BR2.png\": 163,\n\t\"./Troopers/SWBF2_ARC_Troopers.png\": 164,\n\t\"./Troopers/Squad_Clone_Trooper_Ordnance_Specialist.png\": 79,\n\t\"./Troopers/Training_Room_Kamino_AtG.png\": 165,\n\t\"./droid army/AAT_BF2.png\": 82,\n\t\"./droid army/B2-RP-battle-droid-SWBF2.png\": 166,\n\t\"./droid army/Battle_Droids.png\": 167,\n\t\"./droid army/Christophsis_shield.png\": 168,\n\t\"./droid army/SepAAT.jpg\": 169,\n\t\"./droid army/SuperBattleDroidDetail-SWE.png\": 81,\n\t\"./droid army/b1battledroid.png\": 80,\n\t\"./droid army/battle.jpg\": 170,\n\t\"./droid army/soliders.png\": 73,\n\t\"./mainbackground.png\": 171\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 155;","module.exports = __webpack_public_path__ + \"static/media/41st_Elite_Corps.c722e2d1.png\";","module.exports = __webpack_public_path__ + \"static/media/ARCTrooper-CotR.d7498646.png\";","module.exports = __webpack_public_path__ + \"static/media/CloneJumpTrooper.5fb4fd3e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Clone_Commander_CotR.a656e953.png\";","module.exports = __webpack_public_path__ + \"static/media/Clone_heavy_gunner.023e652a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Military_Complex.a40da423.jpg\";","module.exports = __webpack_public_path__ + \"static/media/PhaseICloneTrooper2-Fathead.b3542940.png\";","module.exports = __webpack_public_path__ + \"static/media/RiotCloneTrooper-TCWs2BR2.c849046a.png\";","module.exports = __webpack_public_path__ + \"static/media/SWBF2_ARC_Troopers.371a175f.png\";","module.exports = __webpack_public_path__ + \"static/media/Training_Room_Kamino_AtG.763e2687.png\";","module.exports = __webpack_public_path__ + \"static/media/B2-RP-battle-droid-SWBF2.ce0917e5.png\";","module.exports = __webpack_public_path__ + \"static/media/Battle_Droids.708609bc.png\";","module.exports = __webpack_public_path__ + \"static/media/Christophsis_shield.3c8157b1.png\";","module.exports = __webpack_public_path__ + \"static/media/SepAAT.304fa889.jpg\";","module.exports = __webpack_public_path__ + \"static/media/battle.9a7fde39.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mainbackground.16536c25.png\";","import React from 'react'\n\n\nexport default function ArmyCard({type='',image,onClick=()=>{},color}){\n    return(\n<div className='army-card' style={{borderColor:color}} onClick={onClick}>\n        {image}\n        <p style={{color}}className='title'>{type}</p>\n        <div className='mask' style={{background:color}}/>\n    </div>\n    )\n}","import React from 'react';\nimport { Layout,Button } from 'antd'\nimport ArmyCard from '../components/ArmyCard';\n\nexport default function Home({history}) {\n    return(\n   <React.Fragment>\n       <Layout className='home'>\n        <p className='title'>Game of Clones</p>\n        {/* <Header/> */}\n        <div className='main'>  \n            <ArmyCard \n            onClick={()=>history.push('/details',{type:0})} \n            type='Droid' \n            image={<img src={require('../assets/images/droid army/soliders.png')} />}\n            color='red'\n            />\n            <div className='battle-btn' onClick={()=>history.push('/battle')}><p>New Battle</p></div>\n            <ArmyCard \n            onClick={()=>history.push('/details',{type:1})} \n            type='Troopers' \n            image={<img src={require('../assets/images/Troopers/Grand_army_formation.jpg')} />}\n            color='blue'\n            />\n        </div>\n       </Layout>\n   </React.Fragment>\n        )\n}","import React from 'react';\n\n\nexport default function ArmyDetailCard({delay,data,color}){\n\n\n    return(\n<div class=\"flip-card\" style={{animationDelay:delay+'s'}}>\n  <div class=\"flip-card-inner\">\n    <div class=\"flip-card-front\"  style={{background:color}}>\n      {data[\"image\"]}\n    </div>\n    <div class=\"flip-card-back\">\n      <h2>{data['Kind']}</h2> \n      <h6>{data['Description']}</h6> \n      <div className='traits'>\n          <ul>\n            <li>Strength:{data['Strength']}</li> \n            <li>Agility:{data['Agility']}</li> \n            <li>Intellignce:{data['Intelligence']}</li> \n          </ul>\n          <ul>\n              {data[\"Terrain\"].split(',').map(d=><li style={{background:color}}>{d}</li>)}\n          </ul>\n      </div>\n    \n    </div>\n  </div>\n</div>\n\n    )\n}","import React from 'react'\n\nexport const armies=[\n    {\n      \"Kind\": \"Advanced Recon Commandos\",\n      \"Description\": \"Also known as ARC troopers, were elite clone troopers that excel and received further training.\",\n      \"Strength\": 6,\n      \"Agility\": 3,\n      \"Intelligence\": 5,\n      \"Terrain\": \"Air, Under water, Inter Galactic Space, Ground, Buildings\",\n      \"Type\": \"clone trooper\",\n      \"image\": <img src={require(\"../assets/images/Troopers/Clone_trooper_armor.png\")}/>\n    },\n    {\n      \"Kind\": \"Clone SCUBA troopers\",\n      \"Description\": \"Clone troopers equipped with underwater armor and weaponry.\",\n      \"Strength\": 4,\n      \"Agility\": 3,\n      \"Intelligence\": 7,\n      \"Terrain\": \"Under Water, Ground\",\n      \"Type\": \"clone trooper\",\n      \"image\": <img src={require(\"../assets/images/Troopers/CloneSCUBAtrooper-TCWs4BR1.png\")}/>\n    },\n    {\n      \"Kind\": \"Clone sharpshooters\",\n      \"Description\": \"Clone troopers trained to be snipers.\",\n      \"Strength\": 2,\n      \"Agility\": 7,\n      \"Intelligence\": 8,\n      \"Terrain\": \"Ground, Buildings\",\n      \"Type\": \"clone trooper\",\n      \"image\": <img src={require(\"../assets/images/Troopers/KixFull-SWE.png\")}/>\n    },\n    {\n      \"Kind\": \"Clone jetpack troopers\",\n      \"Description\": \"Clone troopers equipped with a jetpack and missile launcher\",\n      \"Strength\": 8,\n      \"Agility\": 8,\n      \"Intelligence\": 4,\n      \"Terrain\": \"Ground, Inter Galactic Space\",\n      \"Type\": \"clone trooper\",\n      \"image\": <img src={require(\"../assets/images/Troopers/Phase1Jumptrooper_BFII.png\")}/>\n    },\n    {\n      \"Kind\": \"Clone ordnance specialists\",\n      \"Description\": \"Clone troopers that have received specialized training in arming and diffusing bombs.\",\n      \"Strength\": 9,\n      \"Agility\": 7,\n      \"Intelligence\": 4,\n      \"Terrain\": \"Ground, Buildings\",\n      \"Type\": \"clone trooper\",\n      \"image\": <img src={require(\"../assets/images/Troopers/Squad_Clone_Trooper_Ordnance_Specialist.png\")}/>\n    },\n    {\n      \"Kind\": \"B1 Battle droids\",\n      \"Description\": \"B1 battle droids, also referred to as standard battle droids, were the most widely used battle droids manufactured by Baktoid Combat Automata and Baktoid Armor Workshop\",\n      \"Strength\": 3,\n      \"Agility\": 5,\n      \"Intelligence\": 7,\n      \"Terrain\": \"Air, Under water, Inter Galactic Space, Ground, Buildings\",\n      \"Type\": \"droid army\",\n      \"image\": <img src={require(\"../assets/images/droid army/b1battledroid.png\")}/>\n    },\n    {\n      \"Kind\": \"B2 Super battle droids\",\n      \"Description\": \"B2 super battle droids, also known as super battle droids or super droids, were an advanced battle droid used by the Confederacy of Independent Systems during the Clone Wars. Super battle droids were much stronger than their predecessors, and like the updated B1s used by the Confederacy, they did not require a command system to operate, which gave the droids limited independence.\",\n      \"Strength\": 6,\n      \"Agility\": 4,\n      \"Intelligence\": 8,\n      \"Terrain\": \"Air, Under water, Inter Galactic Space, Ground, Buildings\",\n      \"Type\": \"droid army\",\n      \"image\": <img src={require(\"../assets/images/droid army/SuperBattleDroidDetail-SWE.png\")}/>\n    },\n    {\n      \"Kind\": \"Armored Assault Tanks\",\n      \"Description\": \"The Armored Assault Tank, also known as the AAT battle tank or the AAT-1 Hover Tank, was an artillery vehicle used by the Trade Federation\",\n      \"Strength\": 8,\n      \"Agility\": 3,\n      \"Intelligence\": 2,\n      \"Terrain\": \"Air, Under water, Inter Galactic Space, Ground, Buildings\",\n      \"Type\": \"droid army\",\n      \"image\": <img style={{width:'200px',height:'80%'}} src={require(\"../assets/images/droid army/AAT_BF2.png\")}/>\n    }\n  ]","import React from 'react';\nimport ArmyDetailCard from '../components/ArmyDetailCard';\nimport { Layout, Row } from 'antd';\nimport {armies} from '../data/Details'\nimport { IoMdArrowBack } from 'react-icons/io';\n\nconst types=['droid army','clone trooper']\nconst props={style:{cursor:'pointer',position:'fixed',top:'20px',left:'20px'},size:40,color:'#fff'}\nexport default function ArmyDetails({history}) {\n    const {type}=history.location.state\n    const color=type===0?'red':'blue'\n    return(\n        <Layout>\n            <Row>\n                <div className='army-details-title'>\n                    <IoMdArrowBack onClick={()=>history.push('/')} {...props}/>\n                    <p style={{textShadow:`0 0 20px ${color}`}}>\n                    {types[type].toUpperCase()}</p>\n                </div>\n            </Row>\n<Row>\n    <div className='army-details'>\n       {armies.filter(a=>a['Type']===types[type]).map((v,i)=>( \n       <ArmyDetailCard color={color} delay={i/3} data={v}/>))}\n\n    </div>\n</Row>\n        <button className='add-army-btn' style={{background:color}}>ADD {types[type].toUpperCase()}</button>\n        </Layout>\n   )\n}","import React from 'react';\n\nexport default function BattleCards({data,color='red',delay,num=0}){\n\n    return(\n        <React.Fragment>\n            <div className='battle-card' style={{animationDelay:delay+'s'}}>\n                <div className='army-battle-kind' style={{borderColor:color}}>\n                    {data['image']}\n                </div>\n                <div className='army-battle-count' style={{background:color}}>\n                    <p>{data['Kind']}</p>\n                    <p>{num}</p>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}","import React,{useState} from 'react';\nimport { Layout, Row,Col } from 'antd';\nimport {armies} from '../data/Details'\nimport BattleCards from '../components/BattleCards';\n\nconst types=['droid army','clone trooper']\nconst props={style:{cursor:'pointer',position:'fixed',top:'20px',left:'20px'},size:40,color:'#fff'}\n\nexport default function Battle({history}) {\n    const droid=armies.filter(a=>a['Type']===types[0])\n    const troopers=armies.filter(a=>a['Type']===types[1])\n    \n    return(\n        <React.Fragment>\n            <Layout className='battleground'>\n                <Row className='main-battle'>\n                    <Col className='droid-side'>\n                        {droid.map((v,i)=>\n                            <BattleCards num={parseInt(Math.random()*100)} data={v} delay={i/10}/>\n                        )}\n                    </Col>\n                    <Col  className='trooper-side'>\n                        {troopers.map((v,i)=>\n                            <BattleCards num={parseInt(Math.random()*50)} color='blue' data={v} delay={i/10}/>\n                            )}\n                    </Col>\n                </Row>\n                <button onClick={()=>{\n                    history.push('/result')\n                }}>Start Battle</button>\n            </Layout>\n        </React.Fragment>\n    )\n}","import React ,{useState} from 'react';\nimport { IoMdHome, IoMdTime } from 'react-icons/io';\nimport {GiSkullSabertooth,GiDiceEightFacesEight,GiBloodyStash} from 'react-icons/gi';\n\nconst props={style:{marginRight:'5px'}}\nconst getResult=()=>Math.random()>0.5\nexport default function BattleResult({history}) {\n    const res=getResult()\n    return(\n    <div className='battle-result'>\n        <div className='mask' style={{background:res?'blue':'red'}}/>\n        <div>\n            <img src={require(`../assets/images/${res?'Troopers/41st_Elite_Corps.png':'droid army/Battle_Droids.png'}`)} />\n        </div>\n        <div className='winner-details'>\n        <p className='title'>{res?'Troopers ':'Droid Army '}Won!</p>\n        <p className='det'>Total battle points <span><GiDiceEightFacesEight {...props}/>{parseInt(Math.random()*10000)}</span></p>\n        <p className='det'>Number of Kills <span><GiSkullSabertooth {...props}/>{parseInt(Math.random()*100)}</span></p>\n        <p className='det'>Total Damage <span><GiBloodyStash {...props}/>{parseInt(Math.random()*100000)}</span></p>\n           <div className='button-grp'>\n                <button onClick={()=>history.push('/')} style={{background:'red'}}> <IoMdTime/> History</button>\n                <button onClick={()=>history.push('/')} style={{background:'blue'}}> <IoMdHome/> Home</button>\n            </div>\n        </div>\n    </div>)\n}","import React from 'react';\n\nexport default function BattleHistory() {\n    return(<div>\n        Hello\n    </div>)\n}","import React from 'react';\nimport './utils/styles.scss'\nimport {BrowserRouter as Router,Link,Route,Switch} from 'react-router-dom'\nimport Home from './Pages/Home';\nimport ArmyDetails from './Pages/ArmyDetails';\nimport Battle from './Pages/Battle';\nimport BattleResult from './Pages/BattleResult';\nimport BattleHistory from './Pages/BattleHistory';\n\nfunction App() {\n\n  return <React.Fragment>\n    <Router>\n      <Route exact path='/' render={Home} />\n      <Route exact path='/details' render={ArmyDetails} />\n      <Route exact path='/battle' render={Battle} />\n      <Route exact path='/result' render={BattleResult} />\n      <Route exact path='/history' render={BattleHistory} />\n    </Router>\n  </React.Fragment>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/soliders.43f196f9.png\";","module.exports = __webpack_public_path__ + \"static/media/Grand_army_formation.31d5d716.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Clone_trooper_armor.4ebd0dbf.png\";","module.exports = __webpack_public_path__ + \"static/media/CloneSCUBAtrooper-TCWs4BR1.50fd1d14.png\";","module.exports = __webpack_public_path__ + \"static/media/KixFull-SWE.8886b03a.png\";","module.exports = __webpack_public_path__ + \"static/media/Phase1Jumptrooper_BFII.3e81b1e3.png\";","module.exports = __webpack_public_path__ + \"static/media/Squad_Clone_Trooper_Ordnance_Specialist.1c05a5ee.png\";","module.exports = __webpack_public_path__ + \"static/media/b1battledroid.1cca7fa6.png\";","module.exports = __webpack_public_path__ + \"static/media/SuperBattleDroidDetail-SWE.af4f11ba.png\";","module.exports = __webpack_public_path__ + \"static/media/AAT_BF2.71b7e4ae.png\";"],"sourceRoot":""}